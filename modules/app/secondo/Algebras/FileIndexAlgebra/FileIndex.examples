Sequential: Yes
Database    : berlintest 
Restore     : NO


Operator  : removeFile
Number    : 1
Signature : {text,string} -> bool
Example   : query removeFile("plzOrte")
Result    : unpredictable
Remark    : depends on existence of a file


Operator  : removeFile
Number    : 2
Signature : {text,string} -> bool
Example   : query removeFile("ix_opt_thousand_no.bin")
Result    : unpredictable
Remark    : depends on existence of a file

Operator  : removeFile
Number    : 3
Signature : {text,string} -> bool
Example   : query removeFile("plzOrteRebuild")
Result    : unpredictable
Remark    : depends on existence of a file

Operator  : removeFile
Number    : 4
Signature : {text,string} -> bool
Example   : query removeFile("strassen_GeoData_rtree.bin")
Result    : unpredictable
Remark    : depends on existence of a file

Operator  : removeFile
Number    : 5
Signature : {text,string} -> bool
Example   : query removeFile("strassen_GeoData_rtree_bulk.bin")
Result    : unpredictable
Remark    : depends on existence of a file

Operator  : removeFile
Number    : 6
Signature : {text,string} -> bool
Example   : query removeFile("strassen_GeoData_rtree_rebuild")
Result    : unpredictable
Remark    : depends on existence of a file



Operator    : createfbtree
Number      : 7
Signature   : stream(tuple(X))x{string, text}xIdentxIdent -> stream(tuple(X))
Example     : query plz feed addid createfbtree['plzOrte', Ort, TID] count = plz count
Result      : TRUE 


Operator    : bulkloadfbtree
Number      : 8
Signature   : stream(tuple(X))x{string, text}xIdentxIdent -> stream(tuple(X))
Example     : query thousand feed addid bulkloadfbtree['ix_opt_thousand_no.bin', No, TID] count 
Result      : 1000

Operator    : insertfbtree
Number      : 9 
Signature   : stream(tuple(X))x{string, text}xIdentxIdent -> stream(tuple(X))
Example     : query plz feed addid insertfbtree['plzOrte', Ort, TID] count = plz count
Result      : TRUE

Operator    : deletefbtree
Number      : 10
Signature   : stream(tuple(X))x{string, text}xIdentxIdent -> stream(tuple(X))
Example     : query plz feed addid deletefbtree['plzOrte', Ort, TID] count = plz count
Result      : TRUE 

Operator    : rebuildfbtree
Number      : 11
Signature   : {string, text}x{string, text} -> bool
Example     : query rebuildfbtree('plzOrte', 'plzOrteRebuild')
Result      : TRUE

Operator    : frange
Number      : 12
Signature   : {text , string} × T × T -> stream( tid )
Example     : query "ix_opt_thousand_no.bin" frange[201,300] count
Result      : 100

Operator    : frange
Number      : 13
Signature   : {text , string} × T × T -> stream( tid )
Example     : query "ix_opt_thousand_no.bin" frange[300,201] count
Result      : 100

Operator    : fleftrange
Number      : 14
Signature   : {text , string} × T -> stream(tid)
Example     : query "ix_opt_thousand_no.bin" fleftrange[200] count
Result      : 200

Operator    : frightrange
Number      : 15
Signature   : {text , string} × T -> stream(tid)
Example     : query "ix_opt_thousand_no.bin" frightrange[801] count
Result      : 200

Operator    : fexactmatch
Number      : 16
Signature   : {text , string} × T -> stream(tid)
Example     : query "ix_opt_thousand_no.bin" fexactmatch[123] count
Result      : 1

Operator    : createfrtree
Number      : 17
Signature   : stream(tuple(X))x{string,text}xIdentxIdentxint->stream(tuple(X))
Example     : query strassen feed addid createfrtree["strassen_GeoData_rtree.bin",GeoData, TID, 2] count = strassen count
Result      : TRUE

Operator    : fwindowintersects
Number      : 18
Signature   : {string, text}xR -> stream(tid)
Example     : query fwindowintersects('strassen_GeoData_rtree.bin', bbox(thecenter)) count = strassen feed extend[ B: bbox(.GeoData) ] filter[.B intersects bbox(thecenter)] count
Result      : TRUE


Operator    : insertfrtree
Number      : 19
Signature   : stream(tuple(X))x{string, text}xIdentxIdent -> stream(tuple(X))
Example     : query strassen feed addid insertfrtree["strassen_GeoData_rtree.bin", GeoData, TID] count = strassen count
Result      : TRUE

Operator    : bulkloadfrtree
Number      : 20
Signature   : stream(tuple(X))x{string, text}xIdentxIdentxintxreal->stream(tuple(X))
Example     : query strassen feed addid bulkloadfrtree ['strassen_GeoData_rtree_bulk.bin', GeoData, TID, 4, 10000.0 ] count = strassen count
Result      : TRUE

Operator    : deletefrtree
Number      : 21
Signature   : stream(tuple(X))x{string, text}xIdentxIdent -> stream(tuple(X))
Example     : query strassen feed addid deletefrtree['strassen_GeoData_rtree.bin', GeoData, TID] count = strassen count
Result      : TRUE


Operator    : rebuildfrtree
Number      : 22
Signature   : {string, text}x{string, text} -> bool
Example     : query rebuildfrtree ('strassen_GeoData_rtree.bin', 'strassen_GeoData_rtree_rebuild') 
Result      : TRUE


