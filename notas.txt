-modulo jts-app contém a gui
- modulo test contem o test runner (um programa que permite carregar fihceiros .wkt e apresentar a geometria neles definida
- modulo example contém exemplos de código para criação de formas (polyline, polygon...) 
e operações com as mesmas (interseção,...)
- modulo app contem o testBuilder, uma gui mais completa que permite fazer operações com geometrias 2D
- no modulo app, package org.locationtech.jttest.testbuilder a classe JTSTstBuilder permite correr o testBuilder com a gui.
No entanto, a classe que carrega os icones a apresentar na gui verifica o diretório de resources no /modules/app/target/classes/,
no entanto sem o goal resources:resources estes não são copiados do diretório /modules/app/source/main/resources/ 
para o /modules/app/target/classes/

- IMPORTANTE! o projeto maven que contém todos os modulos deve ser ser compilados com:
mvn clean:clean resources:resources compiler:compile jar:jar install:install -DskipTest:true


-JTSTestBuilderFrame: carrega os componentes da janela


Alterações
- Apresentada uma janela de escolha de ficheiros quando se corre o programa (usado para escolher uma imagem). Alteração 
feita no main da classe JTSTestBuilder do package "testbuilder", do modulo "app"
- GeometryEditPanel: colocada imagem como fundo de ecrã (metodo paintComponent e repaintComponent para atualizar em eventos)
- GridRenderer: atributo isEnabled colocado a false para nao apresentar grelha
- RenderManager: metodo initImage, comentado a chamada a funçao erase, que desenha um quadrado branco por cima da imagem,
atualizando assim as linhas que se vao desenhando ou movendo. Problema: se se mover o ponto, é apresentado no painel todas
as alteraçoes as linhas e polygons.

---> todo:
-adicionar botão para ter a grid ou nao (GridRenderer, atributo isEnabled a false não mostra grids)
-desenhar polygons em cima da geometria usando o ficheiro de correspondencias
